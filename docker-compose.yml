version: "3.3"
services:
  event_rabbitmq:
    container_name: event_rabbitmqs
    hostname: event_rabbitmqs
    image: rabbitmq
    ports:
      - "5672:5672"
    restart: always
    networks:
      - ems
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /

  product_backend:
    container_name: product_backend
    hostname: product_backend
    build: ./products
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - ems
    depends_on:
      - event_rabbitmq
    volumes:
      - ems_data:/var/www/html
    links:
      - event_rabbitmq
    environment:
      APP_PORT: 8080
      RABBITMQ_HOST: event_rabbitmqs

  order_backend:
    container_name: order_backend
    hostname: order_backend
    build: ./orders
    ports:
      - "8082:8082"
    restart: unless-stopped
    networks:
      - ems
    depends_on:
      - event_rabbitmq
    volumes:
      - ems_data:/var/www/html
    links:
      - event_rabbitmq
    environment:
      APP_PORT: 8082
      RABBITMQ_HOST: event_rabbitmqs

  fe:
    container_name: fe
    hostname: fe
    build: ./fe
    ports:
      - "8081:80"
    depends_on:
      - product_backend
    links:
      - product_backend
    environment:
      REACT_APP_NAME: "Event Driven"

networks:
  ems:
    driver: bridge
volumes:
  ems_data: {}



